/*
 * Copyright 2015 Karl Dahlgren
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.castlemock.model.core;

import java.util.Objects;

/**
 * The ServiceResult is a container class for the output message generated by the service classes.
 * @author Karl Dahlgren
 * @since 1.0
 */
public class ServiceResult<O extends Output> {

    private final O output;

    private ServiceResult(final Builder<O> builder) {
        this.output = Objects.requireNonNull(builder.output, "output");
    }

    /**
     * Get the output message
     * @return The output message
     */
    public O getOutput() {
        return output;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        final ServiceResult<?> that = (ServiceResult<?>) o;
        return Objects.equals(output, that.output);
    }

    @Override
    public int hashCode() {
        return Objects.hash(output);
    }

    @Override
    public String toString() {
        return "ServiceResult{" +
                "output=" + output +
                '}';
    }

    public static <O extends Output> Builder<O> builder() {
        return new Builder<>();
    }

    public static final class Builder<O extends Output> {
        private O output;

        private Builder() {
        }

        public Builder<O> output(final O output) {
            this.output = output;
            return this;
        }

        public ServiceResult<O> build() {
            return new ServiceResult<O>(this);
        }
    }
}
