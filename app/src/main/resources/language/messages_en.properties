# Copyright 2015 Karl Dahlgren
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Language property conventions {Project}.{Page filename}.{Type}.{Variable name}
# Example: general.login.input.alias or soap.soapproject.header.project
# Please note that the general keyword is reserved for the general pages for Castle Mock and that are not tied to any mocking component
# Language property conventions for types: type.{name}.{name}.{value}

general.type.project.REST=REST
general.type.project.SOAP=SOAP
general.type.project.GRAPHQL=GraphQL

general.menu.home=Home
general.menu.events=Events
general.menu.logs=Logs
general.menu.projects=Projects
general.menu.configuration=Configuration
general.menu.users=Users
general.menu.system=System
general.menu.logout=Logout

general.breadcrumb.home=Home
general.breadcrumb.users=Users
general.breadcrumb.logs=Logs

general.footer.pagecreated=Page created: {0}

# Login (login.jsp)
general.login.title.title=Castle Mock - Login
general.login.input.username=Username
general.login.input.password=Password
general.login.label.rememberme=Keep me signed in
general.login.button.login=Login
general.login.label.logoutsuccessful=Logout successful
general.login.label.invalidcredentials=Invalid username or password
general.login.label.userlocked=User is locked
general.login.label.userinactive=User is inactive
general.login.label.unknownreason=Unable to login due to unknown reasons

general.error.title=An error occurred

general.error.forbidden.title=Access denied
general.error.forbidden.description=You do not have permission to access this page!
general.error.forbidden.user=Username: {0}

general.error.notfound.title=Castle Mock - Page not found
general.error.notfound.message=Unable to find the requested page.
general.error.notfound.button=Go to login page

general.mode.demo.disabled=This feature is disabled in demo mode

# Header (header.jsp)
general.header.input.search=Search...

# Index (index.jsp)
general.index.title.title=Castle Mock


general.search.header.results=Search results
general.search.column.title=Title
general.search.column.description=Description
general.search.label.noresults=No results

# Project overview (projectOverview.jsp)
general.projectoverview.header.overview=Overview
general.projectoverview.header.projects=Projects
general.projectoverview.label.noprojects=No projects available.
general.projectoverview.label.createnewproject=Click on the "New project" button to create a new project.
general.projectoverview.column.selected=Selected
general.projectoverview.column.project=Project
general.projectoverview.column.type=Type
general.projectoverview.column.description=Description
general.projectoverview.button.exportprojects=Export projects
general.projectoverview.button.deleteprojects=Delete projects
general.projectoverview.button.newproject=New project
general.projectoverview.button.importproject=Import project

# New project (createProject.jsp)
general.createproject.header=New Project
general.createproject.label.name=Name
general.createproject.label.projecttype=Project type
general.createproject.label.description=Description (Optional)
general.createproject.button.createproject=Create project
general.createproject.button.cancel=Cancel

# Import project (importProject.jsp)
general.importproject.header.importproject=Import project
general.importproject.label.uploaddescription=Drag files into the box or click on the button to choose files
general.importproject.button.uploadfiles=Upload files
general.importproject.button.cancel=Cancel

# Export project (exportProject.jsp)
general.exportproject.header.exportproject=Export project

# Delete project (deleteProject.jsp)
general.deleteproject.header.deleteproject=Delete {0}
general.deleteproject.label.confirmation=Are you sure that you want to delete {0}?
general.deleteproject.button.deleteproject=Delete project
general.deleteproject.button.cancel=Cancel

# Update project (updateProject.jsp)
general.updateproject.header.updateproject=Update project: {0}
general.updateproject.label.name=Name
general.updateproject.label.description=Description
general.updateproject.button.discardchanges=Discard changes
general.updateproject.button.updateproject=Update project

# Delete projects (deleteProjects.jsp)
general.deleteprojects.header.deleteproject=Delete projects?
general.deleteprojects.label.confirmation=Are you sure that you want to delete the following projects:
general.deleteprojects.button.deleteproject=Delete projects
general.deleteprojects.button.cancel=Cancel
general.deleteprojects.label.noprojects=You need to at least select one project to remove

# System (system.jsp)
general.system.header.system=System
general.system.label.javaversion=Java version
general.system.label.javavendor=Java vendor
general.system.label.operatingsystemname=OS
general.system.label.serverbuilt=Server built
general.system.label.serverversion=Server version
general.system.label.serverinfo=Server info
general.system.label.totalmemory=Total memory
general.system.label.maxmemory=Max memory
general.system.label.freememory=Free memory
general.system.label.availableprocessors=Available processors
general.system.label.castlemockhomedirectory=Castle Mock home directory
general.system.label.mongo.host=Mongodb host
general.system.label.mongo.port=Mongodb port
general.system.label.mongo.uri=Mongodb URI
general.system.label.mongo.database=Mongodb database

# Log overview (eventOverview.jsp)
general.eventoverview.header.events=Events
general.eventoverview.header.log=Logs
general.eventoverview.button.clearlogs=Clear logs
general.eventoverview.column.id=Id
general.eventoverview.column.resourcename=Resource name
general.eventoverview.column.type=Type
general.eventoverview.column.startdate=Start date
general.eventoverview.column.enddate=End date

general.clearevents.header.clearlogs=Clear logs?
general.clearevents.label.confirmation=Are you sure that you want to clear and remove all logs?
general.clearevents.button.clearlogs=Clear logs
general.clearevents.button.cancel=Cancel

# Statistics (statistic.jsp)
general.statistics.header.statistics=Statistics

# User overview (userOverview.jsp)
general.useroverview.header.users=Users
general.useroverview.field.createuser=Create user
general.useroverview.label.username=Username
general.useroverview.label.fullName=Full Name
general.useroverview.label.password=Password
general.useroverview.label.email=Email
general.useroverview.label.role=Role
general.useroverview.button.createuser=Create user
general.useroverview.header.usertable=Users
general.useroverview.column.name=Name
general.useroverview.column.email=Email
general.useroverview.column.role=Role
general.useroverview.column.status=Status
general.useroverview.column.created=Created
general.useroverview.column.updated=Updated

# User (user.jsp)
general.user.header.user=User: {0}
general.user.label.username=Username
general.user.label.email=Email
general.user.label.fullName=Full Name
general.user.label.status=Status
general.user.label.role=Role
general.user.label.created=Created
general.user.label.updated=Updated
general.user.button.updateuser=Update user
general.user.button.deleteuser=Delete user

# Update user (updateUser.jsp)
general.updateuser.header.updateuser=Update: {0}
general.updateuser.label.username=Username
general.updateuser.label.password=Password
general.updateuser.label.fullName=Full Name
general.updateuser.label.email=Email
general.updateuser.label.status=Status
general.updateuser.label.role=Role
general.updateuser.button.updateuser=Update user
general.updateuser.button.discardchanges=Discard changes

# Delete user (deleteUser.jsp)
general.deleteuser.header.deleteuser=Delete {0}?
general.deleteuser.label.confirmation=Are you sure that you want to delete {0}?
general.deleteuser.button.deleteuser=Delete user
general.deleteuser.button.cancel=Cancel

# Current user (currentUser.jsp)
general.currentuser.header.user=User: {0}
general.currentuser.label.username=Username
general.currentuser.label.email=Email
general.currentuser.label.fullName=Full Name
general.currentuser.label.status=Status
general.currentuser.label.role=Role
general.currentuser.label.created=Created
general.currentuser.label.updated=Updated
general.currentuser.button.updateuser=Update user

# Update current user (updateCurrentUser.jsp)
general.updatecurrentuser.header.updateuser=Update: {0}
general.updatecurrentuser.label.username=Username
general.updatecurrentuser.label.email=Email
general.updatecurrentuser.label.fullName=Full Name
general.updatecurrentuser.label.password=Password
general.updatecurrentuser.label.verifypassword=Verify password
general.updatecurrentuser.button.updateuser=Update user
general.updatecurrentuser.button.discardchanges=Discard changes

# Type - User role
general.type.role.READER=Reader
general.type.role.MODIFIER=Modifier
general.type.role.ADMIN=Admin

# Type - User status
general.type.status.ACTIVE=Active
general.type.status.INACTIVE=Inactive
general.type.status.LOCKED=Locked

# Type - Project
general.type.project=Project

# Configuration
general.configuration.header.configuration=Configuration
general.configuration.button.save=Save
general.configuration.button.discard=Discard changes
general.configuration.label.noconfigurations=No configurations available at the moment.
general.configuration.group.FileSettings=File settings
general.configuration.group.FileSettings.MaximumSize=Maximum size (KB)
general.configuration.group.ResponseSettings=Response settings
general.configuration.group.FileSettings.MaximumLoggedResponses=Maximum logged responses

# SOAP Mock

soap.breadcrumb.project=SOAP Project
soap.breadcrumb.port=Port
soap.breadcrumb.operation=Operation
soap.breadcrumb.response=Response


# Project (soapProject.jsp)
soap.soapproject.header.project=Project: {0}
soap.soapproject.button.updateproject=Update project
soap.soapproject.button.update=Update
soap.soapproject.button.upload=Upload
soap.soapproject.button.export=Export project
soap.soapproject.button.delete=Delete project
soap.soapproject.label.name=Name
soap.soapproject.label.description=Description
soap.soapproject.label.type=Type
soap.soapproject.header.ports=Ports
soap.soapproject.header.resources=Resources
soap.soapproject.column.selected=Selected
soap.soapproject.column.port=Port
soap.soapproject.column.resource=Resource
soap.soapproject.column.type=Type
soap.soapproject.button.updateoperation=Update
soap.soapproject.button.updateendpoint=Update endpoint
soap.soapproject.button.deleteport=Delete port
soap.soapproject.label.noports=No ports available. Click on the "Upload  {0}" button to load new ports to the project.
soap.soapproject.label.noresources=No resources available. Click on the "Upload  {0}" button to load new resources to the project.

# Upload file (soapAddWSDL.jsp)
soap.soapaddwsdl.header.uploadfile=Add {0}
soap.soapaddwsdl.header.description=On this page you can link or upload WSDL files. In the "Link WSDL" section you can link to an WSDL file accessible from the Internet. In the "Upload WSDL" section you can upload one or more WSDL files by clicking on the upload button. Only files with the file type ".wsdl" will be considered as a WSDL file.
soap.soapaddwsdl.header.link=Link {0}
soap.soapaddwsdl.label.link=Link to {0} file:
soap.soapaddwsdl.header.upload=Upload {0}
soap.soapaddwsdl.label.upload=Files to upload:
soap.soapaddwsdl.label.includeimports=Import linked WSDLs
soap.soapaddwsdl.label.generateresponse=Generate responses for each operation
soap.soapaddwsdl.label.uploaddescription=Drag files into the box or click on the button to choose files
soap.soapaddwsdl.button.uploadfiles=Upload files
soap.soapaddwsdl.button.cancel=Cancel
soap.soapaddwsdl.button.linkwsdl=Link WSDL
soap.soapaddwsdl.message.success.title=Upload successful!
soap.soapaddwsdl.message.success.body=The file was successfully uploaded and one or more ports has been created.
soap.soapaddwsdl.message.error.title=Upload error!
soap.soapaddwsdl.message.error.body=Unable to upload or parse the file.


# Port (soapPort.jsp)
soap.soapport.header.port=Port: {0}
soap.soapport.button.updateport=Update port
soap.soapport.button.deleteport=Delete port
soap.soapport.label.name=Name
soap.soapport.label.uri=URI
soap.soapport.label.address=Address
soap.soapport.label.wsdl=WSDL
soap.soapport.label.forwardedendpoint=Forwarded endpoint
soap.soapport.header.operations=Operations
soap.soapport.column.selected=Selected
soap.soapport.column.name=Name
soap.soapport.column.method=Method
soap.soapport.column.responsestrategy=Response strategy
soap.soapport.column.soapMockResponseStatus=Status
soap.soapport.button.updatestatus=Update status
soap.soapport.button.updateendpoint=Update endpoint
soap.soapport.label.nooperation=No soapOperations are available.

# Delete port (deleteSoapPort.jsp)
soap.deletesoapport.header.deleleteport=Delete {0}?
soap.deletesoapport.label.confirmation=Are you sure that you want to delete {0}?
soap.deletesoapport.button.deleteport=Delete port
soap.deletesoapport.button.cancel=Cancel

# Delete port (deleteSoapPorts.jsp)
soap.deletesoapports.header.deleteports=Delete ports?
soap.deletesoapports.label.confirmation=Are you sure that you want to delete the following port:
soap.deletesoapports.button.deleteports=Delete ports
soap.deletesoapports.button.cancel=Cancel
soap.deletesoapports.label.noports=You need to at least select one port to remove

# Update ports endpoint (updateSoapPortsEndpoint.jsp)
soap.updatesoapportsendpoint.header.updateport=Update port?
soap.updatesoapportsendpoint.label.confirmation=The following ports will be affected by the update:
soap.updatesoapportsendpoint.label.forwardedendpoint=Forwarded endpoint
soap.updatesoapportsendpoint.button.updateport=Update ports
soap.updatesoapportsendpoint.button.cancel=Cancel
soap.updatesoapportsendpoint.label.noports=You need to at least select one port to update

# Update operation (updateSoapPort.jsp)
soap.updatesoapport.header.updateport=Update port: {0}
soap.updatesoapport.label.name=Name
soap.updatesoapport.label.uri=URI
soap.updatesoapport.button.updateport=Update port
soap.updatesoapport.button.cancel=Cancel

# Operation (soapOperation.jsp)
soap.soapoperation.header.operation=Operation: {0}
soap.soapoperation.button.updateoperation=Update operation
soap.soapoperation.button.createresponse=Create response
soap.soapoperation.label.name=Name
soap.soapoperation.label.identifier=Identifier
soap.soapoperation.label.identifystrategy=Identify strategy
soap.soapoperation.label.soapversion=SOAP Version
soap.soapoperation.label.status=Status
soap.soapoperation.label.responsestrategy=Response strategy
soap.soapoperation.label.method=Method
soap.soapoperation.label.mockonfailure=Mock on failure
soap.soapoperation.label.address=Address
soap.soapoperation.label.simulatenetworkdelay=Simulate network delay
soap.soapoperation.label.networkdelay=Network delay
soap.soapoperation.label.defaultresponse=Default response
soap.soapoperation.label.copyOf=Copy of
soap.soapoperation.header.mockresponses=Responses
soap.soapoperation.column.selected=Selected
soap.soapoperation.column.status=Status
soap.soapoperation.column.responsename=Response name
soap.soapoperation.column.httpstatuscode=HTTP status code
soap.soapoperation.button.update=Update
soap.soapoperation.button.duplicate=Duplicate
soap.soapoperation.button.deletemockresponse=Delete mock responses
soap.soapoperation.header.events=Events
soap.soapoperation.response.table.column.id=Id
soap.soapoperation.label.originalendpoint=Original endpoint
soap.soapoperation.label.forwardedendpoint=Forwarded endpoint
soap.soapoperation.column.id=Id
soap.soapoperation.column.startdate=Start date
soap.soapoperation.column.enddate=End date
soap.soapoperation.column.mockedresponse=Mocked response
soap.soapoperation.label.noresponse=No responses has been created for this SOAP operation. Click on the button "Create response" to create a new response.
soap.soapoperation.label.noevent=No events available

# Update operation endpoint (updateSoapOperationsEndpoint.jsp)
soap.updatesoapoperationsendpoint.header.updateoperation=Update operation?
soap.updatesoapoperationsendpoint.label.confirmation=The following operations will be affected by the update:
soap.updatesoapoperationsendpoint.button.updateoperation=Update operation
soap.updatesoapoperationsendpoint.label.forwardedendpoint=Forwarded endpoint
soap.updatesoapoperationsendpoint.button.cancel=Cancel
soap.updatesoapoperationsendpoint.label.nooperations=You need to at least select one operation to update

# Update operation (updateSoapOperation.jsp)
soap.updatesoapoperation.header.updateoperation=Update operation: {0}
soap.updatesoapoperation.label.status=Status
soap.updatesoapoperation.label.identifystrategy=Identify strategy
soap.updatesoapoperation.label.responsestrategy=Response strategy
soap.updatesoapoperation.label.originalforwardedenpoint=Original forwarded endpoint
soap.updatesoapoperation.label.forwardedendpoint=Forwarded endpoint
soap.updatesoapoperation.label.simulatenetworkdelay=Simulate network delay
soap.updatesoapoperation.label.networkdelay=Network delay
soap.updatesoapoperation.label.defaultresponse=Default response
soap.updatesoapoperation.label.mockonfailure=Mock on failure
soap.updatesoapoperation.dropdown.option.selectresponse= -- Select a response -- 
soap.updatesoapoperation.button.updateoperation=Update operation
soap.updatesoapoperation.button.cancel=Cancel

# Response (soapMockResponse.jsp)
soap.soapmockresponse.header.response=Response: {0}
soap.soapmockresponse.header.body=Body
soap.soapmockresponse.button.updateresponse=Update response
soap.soapmockresponse.button.discardchanges=Discard changes
soap.soapmockresponse.label.name=Name
soap.soapmockresponse.label.status=Status
soap.soapmockresponse.label.httpstatuscode=HTTP status code
soap.soapmockresponse.label.httpstatuscodedefinition=Definition
soap.soapmockresponse.label.useexpressions=Use expressions
soap.soapmockresponse.button.delete=Delete response
soap.soapmockresponse.header.headers=Headers
soap.soapmockresponse.header.xpaths=XPath
soap.soapmockresponse.field.addheader=Add header
soap.soapmockresponse.label.headername=Header name
soap.soapmockresponse.label.headervalue=Header value
soap.soapmockresponse.button.addheader=Add header
soap.soapmockresponse.column.headername=Name
soap.soapmockresponse.column.headervalue=Value
soap.soapmockresponse.button.formatxml=Format XML
soap.soapmockresponse.button.formatjson=Format JSON
soap.soapmockresponse.field.addxpath=Add XPath
soap.soapmockresponse.button.xpath=Add XPath
soap.soapmockresponse.label.xpath=XPath
soap.soapmockresponse.column.xpath=XPath


# Resource (soapResource.jsp)
soap.soapresource.header.resource=Resource: {0}
soap.soapresource.header.body=Body
soap.soapresource.label.name=Name
soap.soapresource.label.type=Type


# Delete response (deleteSoapMockResponse.jsp)
soap.deletesoapmockresponse.header.deleteresponse=Delete {0}?
soap.deletesoapmockresponse.label.confirmation=Are you sure that you want to delete {0}?
soap.deletesoapmockresponse.button.deleteresponse=Delete mocked response
soap.deletesoapmockresponse.button.cancel=Cancel

# Create response (createSoapMockResponse.jsp)
soap.createsoapmockresponse.header.createmockresponse=Create response
soap.createsoapmockresponse.header.body=Body
soap.createsoapmockresponse.label.name=Name
soap.createsoapmockresponse.label.status=Status
soap.createsoapmockresponse.label.httpstatuscode=HTTP status code
soap.createsoapmockresponse.label.httpstatuscodedefinition=Definition
soap.createsoapmockresponse.label.useexpressions=Use expressions
soap.createsoapmockresponse.button.createmockresponse=Create response
soap.createsoapmockresponse.button.cancel=Cancel
soap.createsoapmockresponse.header.headers=Headers
soap.createsoapmockresponse.header.xpaths=XPath
soap.createsoapmockresponse.field.addheader=Add header
soap.createsoapmockresponse.label.headername=Header name
soap.createsoapmockresponse.label.headervalue=Header value
soap.createsoapmockresponse.button.addheader=Add header
soap.createsoapmockresponse.column.headername=Name
soap.createsoapmockresponse.column.headervalue=Value
soap.createsoapmockresponse.button.formatxml=Format XML
soap.createsoapmockresponse.button.formatjson=Format JSON
soap.createsoapmockresponse.field.addxpath=Add XPath
soap.createsoapmockresponse.button.xpath=Add XPath
soap.createsoapmockresponse.label.xpath=XPath
soap.createsoapmockresponse.column.xpath=XPath

# Delete responses (deleteSoapMockResponses.jsp)
soap.deletesoapmockresponses.header.deleteresponses=Delete mocked responses?
soap.deletesoapmockresponses.label.confirmation=Are you sure that you want to delete the following mocked responses:
soap.deletesoapmockresponses.button.deleteresponses=Delete mock responses
soap.deletesoapmockresponses.button.cancel=Cancel
soap.deletesoapmockresponses.label.nomockedresponses=You need to at least select one mocked response to remove


rest.breadcrumb.project=REST Project
rest.breadcrumb.application=Application
rest.breadcrumb.resource=Resource
rest.breadcrumb.method=Method
rest.breadcrumb.response=Response


# REST Project (restProject.jsp)
rest.restproject.header.project=Project: {0}
rest.restproject.button.updateproject=Update project
rest.restproject.button.update=Update
rest.restproject.button.updateendpoint=Update endpoint
rest.restproject.button.upload=Upload
rest.restproject.button.export=Export project
rest.restproject.button.delete=Delete project
rest.restproject.button.createapplication=Create application
rest.restproject.label.name=Name
rest.restproject.label.description=Description
rest.restproject.label.type=Type
rest.restproject.header.applications=Applications
rest.restproject.column.selected=Selected
rest.restproject.column.application=Application
rest.restproject.button.deleteapplication=Delete application
rest.restproject.label.noapplication=No applications available. Click on one of the upload buttons to load a new application into the project.

# Create REST application (createRestApplication.jsp)
rest.createapplication.header.application=New application
rest.createapplication.label.name=Name
rest.createapplication.button.createapplication=Create application
rest.createapplication.button.cancel=Cancel

# Upload REST definition file (restImportDefinition.jsp)
rest.restimportdefinition.header.uploadfile=Upload {0}
rest.restimportdefinition.header.description=On this page you can link or upload {0} files. In the "Link {0}" section you can link to an {0} file accessible from the Internet. In the "Upload {0}" section you can upload one or more {0} files by clicking on the upload button.
rest.restimportdefinition.header.link=Link {0}
rest.restimportdefinition.label.link=Link to {0} file:
rest.restimportdefinition.header.upload=Upload {0}
rest.restimportdefinition.label.upload=Files to upload:
rest.restimportdefinition.label.generateresponse=Generate responses for each operation
rest.restimportdefinition.label.uploaddescription=Drag files into the box or click on the button to choose files
rest.restimportdefinition.button.uploadfiles=Upload files
rest.restimportdefinition.button.cancel=Cancel
rest.restimportdefinition.button.link=Link {0}
rest.restimportdefinition.message.success.title=Upload successful!
rest.restimportdefinition.message.success.body=The file was successfully uploaded and one or more applications has been created.
rest.restimportdefinition.message.error.title=Upload error!
rest.restimportdefinition.message.error.body=Unable to upload or parse the file.


# Update applications endpoint (updateRestApplicationsEndpoint.jsp)
rest.updaterestapplicationsendpoint.header.updateapplication=Update application?
rest.updaterestapplicationsendpoint.label.confirmation=The following applications will be affected by the update:
rest.updaterestapplicationsendpoint.label.forwardedendpoint=Forwarded endpoint
rest.updaterestapplicationsendpoint.button.updateapplications=Update applications
rest.updaterestapplicationsendpoint.button.cancel=Cancel
rest.updaterestapplicationsendpoint.label.noapplications=You need to at least select one application to update

# Rest application (restApplication.jsp)
rest.restapplication.header.application=Application: {0}
rest.restapplication.button.createresource=Create resource
rest.restapplication.button.updateapplication=Update application
rest.restapplication.button.update=Update
rest.restapplication.button.updateendpoint=Update endpoint
rest.restapplication.button.delete=Delete application
rest.restapplication.label.name=Name
rest.restapplication.header.resources=Resources
rest.restapplication.column.selected=Selected
rest.restapplication.column.resource=Resource
rest.restapplication.column.uri=URI
rest.restapplication.button.deleteresources=Delete resources
rest.restapplication.label.noresources=No resources available. Click on the 'Create resource' button to create a new resource.

# Delete application (deleteRestApplication.jsp)
rest.deleteapplication.header.deleteapplication=Delete {0}?
rest.deleteapplication.label.confirmation=Are you sure that you want to delete {0}?
rest.deleteapplication.button.deleteapplication=Delete application
rest.deleteapplication.button.cancel=Cancel

# Delete application (deleteRestApplication.jsp)
rest.deleteapplications.header.deleteapplications=Delete applications?
rest.deleteapplications.label.confirmation=Are you sure that you want to delete the following applications:
rest.deleteapplications.button.deleteapplications=Delete applications
rest.deleteapplications.button.cancel=Cancel
rest.deleteapplications.label.noapplications=You need to at least select one application to remove

# Update application (updateRestApplication.jsp)
rest.updaterestapplication.header.updateapplication=Update application: {0}
rest.updaterestapplication.label.name=Name
rest.updaterestapplication.button.updateapplication=Update application
rest.updaterestapplication.button.cancel=Cancel

# Update applications endpoint (updateRestResourcesEndpoint.jsp)
rest.updaterestresourcesendpoint.header.updateresource=Update resource?
rest.updaterestresourcesendpoint.label.confirmation=The following resources will be affected by the update:
rest.updaterestresourcesendpoint.label.forwardedendpoint=Forwarded endpoint
rest.updaterestresourcesendpoint.button.updateresources=Update resources
rest.updaterestresourcesendpoint.button.cancel=Cancel
rest.updaterestresourcesendpoint.label.noresources=You need to at least select one resource to update

# Create REST resource (createRestResource.jsp)
rest.createresource.header.resource=New resource
rest.createresource.label.name=Name
rest.createresource.label.uri=URI
rest.createresource.tooltip.uri=Example: /resource/{resourceId}
rest.createresource.button.createresource=Create resource
rest.createresource.button.cancel=Cancel

# Rest resource (restResource.jsp)
rest.restresource.header.resource=Resource: {0}
rest.restresource.button.createmethod=Create method
rest.restresource.button.updateresource=Update resource
rest.restresource.button.update=Update
rest.restresource.button.updateendpoint=Update endpoint
rest.restresource.button.delete=Delete resource
rest.restresource.label.name=Name
rest.restresource.label.address=Address
rest.restresource.label.uri=URI
rest.restresource.header.methods=Methods
rest.restresource.column.selected=Selected
rest.restresource.column.methodname=Name
rest.restresource.column.methodmethodtype=Method type
rest.restresource.column.methodmethodstatus=Method status
rest.restresource.column.methodforwardedendpoint=Forwarded endpoint
rest.restresource.button.deletemethods=Delete methods
rest.restresource.label.nomethods=No methods available. Click on the 'Create method' button to create a new method.

# Delete resource (deleteRestResource.jsp)
rest.deleteresource.header.deleteresource=Delete {0}?
rest.deleteresource.label.confirmation=Are you sure that you want to delete {0}?
rest.deleteresource.button.deleteresource=Delete resource
rest.deleteresource.button.cancel=Cancel

# Delete resources (deleteRestResource.jsp)
rest.deleteresources.header.deleteresources=Delete resources?
rest.deleteresources.label.confirmation=Are you sure that you want to delete the following resources:
rest.deleteresources.button.deleteresources=Delete resources
rest.deleteresources.button.cancel=Cancel
rest.deleteresources.label.noresources=You need to at least select one resource to remove

# Update application (updateRestApplication.jsp)
rest.updateresource.header.updateresource=Update resource: {0}
rest.updateresource.label.name=Name
rest.updateresource.label.uri=URI
rest.updateresource.button.updateresource=Update resource
rest.updateresource.button.cancel=Cancel

# Create REST method (createRestMethod.jsp)
rest.createmethod.header.method=New method
rest.createmethod.label.name=Name
rest.createmethod.label.methodtype=Method type
rest.createmethod.button.createmethod=Create method
rest.createmethod.button.cancel=Cancel

# Rest method (restMethod.jsp)
rest.restmethod.header.method=Method: {0}
rest.restmethod.button.update=Update method
rest.restmethod.button.delete=Delete method
rest.restmethod.button.duplicate=Duplicate
rest.restmethod.label.name=Name
rest.restmethod.label.methodtype=Method type
rest.restmethod.label.methodstatus=Method status
rest.restmethod.label.restresponsestrategy=Response strategy
rest.restmethod.label.address=Address
rest.restmethod.label.forwardedendpoint=Forwarded endpoint
rest.restmethod.label.simulatenetworkdelay=Simulate network delay
rest.restmethod.label.defaultresponse=Default response
rest.restmethod.label.networkdelay=Network delay
rest.restmethod.header.mockresponses=Responses
rest.restmethod.column.selected=Selected
rest.restmethod.column.status=Status
rest.restmethod.column.responsename=Response name
rest.restmethod.column.response=Response
rest.restmethod.column.httpstatuscode=HTTP status code
rest.restmethod.button.deletemockresponses=Delete responses
rest.restmethod.label.noresponses=No responses available. Click on the 'Create response' to create a new response.
rest.restmethod.button.createresponse=Create response
rest.restmethod.header.events=Events
rest.restmethod.column.id=Id
rest.restmethod.column.startdate=Start date
rest.restmethod.column.enddate=End date
rest.restmethod.column.mockedresponse=Mocked response
rest.restmethod.label.noresponse=No responses has been created for this soap.operation. Click on the button "Create body" to create a new body.
rest.restmethod.label.noevent=No events available
rest.restmethod.label.copyOf=Copy of


# Delete method (deleteRestMethod.jsp)
rest.deletemethod.header.deletemethod=Delete {0}?
rest.deletemethod.label.confirmation=Are you sure that you want to delete {0}?
rest.deletemethod.button.deletemethod=Delete method
rest.deletemethod.button.cancel=Cancel

# Update applications endpoint (updateRestMethodsEndpoint.jsp)
rest.updaterestmethodsendpoint.header.updatemethod=Update method?
rest.updaterestmethodsendpoint.label.confirmation=The following methods will be affected by the update:
rest.updaterestmethodsendpoint.label.forwardedendpoint=Forwarded endpoint
rest.updaterestmethodsendpoint.button.updatemethods=Update methods
rest.updaterestmethodsendpoint.button.cancel=Cancel
rest.updaterestmethodsendpoint.label.nomethods=You need to at least select one method to update


# Delete resources (deleteRestMethods.jsp)
rest.deletemethods.header.deletemethods=Delete methods?
rest.deletemethods.label.confirmation=Are you sure that you want to delete the following methods:
rest.deletemethods.button.deletemethods=Delete methods
rest.deletemethods.button.cancel=Cancel
rest.deletemethods.label.nomethods=You need to at least select one method to remove

# Update method (updateRestMethod.jsp)
rest.updatemethod.header.updatemethod=Update method: {0}
rest.updatemethod.label.name=Name
rest.updatemethod.label.methodtype=Method type
rest.updatemethod.label.methodstatus=Method status
rest.updatemethod.label.responsestrategy=Response strategy
rest.updatemethod.label.forwardedendpoint=Forwarded endpoint
rest.updatemethod.label.simulatenetworkdelay=Simulate network delay
rest.updatemethod.label.networkdelay=Network delay
rest.updatemethod.label.defaultresponse=Default response
rest.updatemethod.dropdown.option.selectresponse= -- Select a response -- 
rest.updatemethod.button.updatemethod=Update method
rest.updatemethod.button.cancel=Cancel

# Create REST mock response (createSoapMockResponse.jsp)
rest.createrestmockresponse.header.createmockresponse=Create mock response
rest.createrestmockresponse.header.body=Body
rest.createrestmockresponse.label.name=Name
rest.createrestmockresponse.label.status=Status
rest.createrestmockresponse.label.httpstatuscode=HTTP status code
rest.createrestmockresponse.label.useexpressions=Use expressions
soap.createrestmockresponse.label.httpstatuscodedefinition=Definition
rest.createrestmockresponse.button.createmockresponse=Create mock response
rest.createrestmockresponse.button.cancel=Cancel
rest.createrestmockresponse.header.headers=Headers
rest.createrestmockresponse.header.queries=Queries
rest.createrestmockresponse.header.xpaths=XPaths
rest.createrestmockresponse.header.jsonpaths=JSON Paths
rest.createrestmockresponse.header.headerqueries=Header Queries
rest.createrestmockresponse.field.addheader=Add header
rest.createrestmockresponse.field.addquery=Add query
rest.createrestmockresponse.label.headername=Header name
rest.createrestmockresponse.label.headervalue=Header value
rest.createrestmockresponse.button.addheader=Add header
rest.createrestmockresponse.button.addquery=Add query
rest.createrestmockresponse.column.headername=Name
rest.createrestmockresponse.column.headervalue=Value
rest.createrestmockresponse.column.parameter=Parameter
rest.createrestmockresponse.column.header=Header
rest.createrestmockresponse.column.query=Query
rest.createrestmockresponse.column.matchany=Match Any
rest.createrestmockresponse.column.matchcase=Match Case
rest.createrestmockresponse.column.matchregex=Match Regex
rest.createrestmockresponse.column.required=Required
rest.createrestmockresponse.button.formatxml=Format XML
rest.createrestmockresponse.button.formatjson=Format JSON
rest.createrestmockresponse.field.addjsonpath=Add JSON Path
rest.createrestmockresponse.column.jsonpath=JSON Path
rest.createrestmockresponse.label.xpath=XPath
rest.createrestmockresponse.button.addjsonpath=Add JSON Path
rest.createrestmockresponse.field.addheaderquery=Add Header query
rest.createrestmockresponse.field.addxpath=Add XPath
rest.createrestmockresponse.column.xpath=XPath
rest.createrestmockresponse.button.addxpath=Add XPath
rest.createrestmockresponse.label.jsonpath=JSON Path

# Delete REST mock response (deleteRestMockResponse.jsp)
rest.deleterestmockresponse.header.deleteresponse=Delete {0}?
rest.deleterestmockresponse.label.confirmation=Are you sure that you want to delete {0}?
rest.deleterestmockresponse.button.deleteresponse =Delete mocked response
rest.deleterestmockresponse.button.cancel=Cancel

# Delete REST mock responses (deleteRestMockResponses.jsp)
rest.deleterestmockresponses.header.deleteresponses=Delete mocked responses?
rest.deleterestmockresponses.label.confirmation=Are you sure that you want to delete the following mocked responses:
rest.deleterestmockresponses.button.deleteresponses=Delete mock responses
rest.deleterestmockresponses.label.nomockedresponses=You need to at least select one mocked response to remove
rest.deleterestmockresponses.button.cancel=Cancel

# REST mock response (restMockResponse.jsp)
rest.restmockresponse.header.response=Response: {0}
rest.restmockresponse.header.body=Body
rest.restmockresponse.label.name=Name
rest.restmockresponse.label.status=Status
rest.restmockresponse.label.httpstatuscode=HTTP status code
rest.restmockresponse.label.useexpressions=Use expressions
rest.restmockresponse.label.httpstatuscodedefinition=Definition
rest.restmockresponse.button.delete=Delete response
rest.restmockresponse.button.updateresponse=Update response
rest.restmockresponse.button.discardchanges=Discard changes
rest.restmockresponse.header.headers=Headers
rest.restmockresponse.header.queries=Queries
rest.restmockresponse.header.xpaths=XPaths
rest.restmockresponse.header.jsonpaths=JSON Paths
rest.restmockresponse.header.headerqueries=Header Queries
rest.restmockresponse.field.addheader=Add header
rest.restmockresponse.field.addquery=Add query
rest.restmockresponse.label.headername=Header name
rest.restmockresponse.label.headervalue=Header value
rest.restmockresponse.button.addheader=Add header
rest.restmockresponse.button.addquery=Add query
rest.restmockresponse.column.headername=Name
rest.restmockresponse.column.headervalue=Value
rest.restmockresponse.column.parameter=Parameter
rest.restmockresponse.column.header=Header
rest.restmockresponse.column.query=Query
rest.restmockresponse.column.matchany=Match Any
rest.restmockresponse.column.matchcase=Match Case
rest.restmockresponse.column.matchregex=Match Regex
rest.restmockresponse.column.required=Required
rest.restmockresponse.button.formatxml=Format XML
rest.restmockresponse.button.formatjson=Format JSON
rest.restmockresponse.field.addjsonpath=Add JSON Path
rest.restmockresponse.field.addheaderquery=Add header query
rest.restmockresponse.column.jsonpath=JSON Path
rest.restmockresponse.column.headermatch=Header match
rest.restmockresponse.label.xpath=XPath
rest.restmockresponse.button.addjsonpath=Add JSON Path
rest.restmockresponse.button.addheadermatch=Add Header match
rest.restmockresponse.field.addxpath=Add XPath
rest.restmockresponse.column.xpath=XPath
rest.restmockresponse.button.addxpath=Add XPath
rest.restmockresponse.label.jsonpath=JSON Path

# Log (restEvent.jsp)
rest.event.header.log=Log: {0}
rest.event.header.body=Body
rest.event.header.headers=Headers
rest.event.header.parameters=Parameters
rest.event.column.id=Id
rest.event.column.startdate=Start date
rest.event.column.enddate=End date
rest.event.header.request=Request
rest.event.header.response=Response
rest.event.column.response.statuscode=Status code
rest.event.column.request.uri=URI
rest.event.column.request.methodtype=Method type
rest.event.column.headername=Name
rest.event.column.headervalue=Value
rest.event.column.parameterName=Name
rest.event.column.parameterValue=Value

# Log (soapEvent.jsp)
soap.event.header.log=Log: {0}
soap.event.header.body=Body
soap.event.header.headers=Headers
soap.event.column.id=Id
soap.event.column.startdate=Start date
soap.event.column.enddate=End date
soap.event.column.request.uri=URI
soap.event.column.request.methodtype=Method type
soap.event.column.request.type=Type
soap.event.column.response.statuscode=Status code
soap.event.header.request=Request
soap.event.header.response=Response
soap.event.column.headername=Name
soap.event.column.headervalue=Value


# Type - SOAP Response strategy
soap.type.responsestrategy.RANDOM=Random
soap.type.responsestrategy.SEQUENCE=Sequence
soap.type.responsestrategy.XPATH_INPUT=XPath

# Type - SOAP operation status
soap.type.soapoperationstatus.MOCKED=Mocked
soap.type.soapoperationstatus.FORWARDED=Forwarded
soap.type.soapoperationstatus.DISABLED=Disabled
soap.type.soapoperationstatus.RECORDING=Recording
soap.type.soapoperationstatus.RECORD_ONCE=Record once
soap.type.soapoperationstatus.ECHO=Echo

# Type - SOAP Mock response status
soap.type.soapmockresponsestatus.ENABLED=Enabled
soap.type.soapmockresponsestatus.DISABLED=Disabled

# Type - SOAP Identify strategy
soap.type.soapoperationidentifystrategy.ELEMENT=Element
soap.type.soapoperationidentifystrategy.ELEMENT_NAMESPACE=Element and namespace

# Type - REST Response strategy
rest.type.responsestrategy.RANDOM=Random
rest.type.responsestrategy.SEQUENCE=Sequence
rest.type.responsestrategy.QUERY_MATCH=Query match
rest.type.responsestrategy.XPATH=XPath match
rest.type.responsestrategy.JSON_PATH=JSON Path match
rest.type.responsestrategy.HEADER_QUERY_MATCH=Header query match

# Type - REST resources
soap.type.port=Port
soap.type.operation=Operation
soap.type.resource=Resource
soap.type.mockresponse=Mock response

# Type - REST Mock response status
rest.type.restmockresponsestatus.ENABLED=Enabled
rest.type.restmockresponsestatus.DISABLED=Disabled

# Type - REST resources
rest.type.application=Application
rest.type.resource=Resource
rest.type.method=Method
rest.type.mockresponse=Mock response

# Type - REST method status
rest.type.restmethodstatus.MOCKED=Mocked
rest.type.restmethodstatus.FORWARDED=Forwarded
rest.type.restmethodstatus.DISABLED=Disabled
rest.type.restmethodstatus.RECORDING=Recording
rest.type.restmethodstatus.RECORD_ONCE=Record once
rest.type.restmethodstatus.ECHO=Echo

# graphql Project (graphqlProject.jsp)
graphql.graphqlproject.header.project=Project: {0}
graphql.graphqlproject.button.updateproject=Update project
graphql.graphqlproject.button.update=Update
graphql.graphqlproject.button.updateendpoint=Update endpoint
graphql.graphqlproject.button.upload=Upload
graphql.graphqlproject.button.export=Export project
graphql.graphqlproject.button.delete=Delete project
graphql.graphqlproject.header.applications=Applicatons
graphql.graphqlproject.button.createapplication=Create application
graphql.graphqlproject.label.name=Name
graphql.graphqlproject.label.description=Description
graphql.graphqlproject.label.type=Type
graphql.graphqlproject.header.operations=Operations
graphql.graphqlproject.header.types=Types
graphql.graphqlproject.column.selected=Selected
graphql.graphqlproject.column.description=Description
graphql.graphqlproject.column.name=Name
graphql.graphqlproject.label.noapplications=No applications available.
graphql.graphqlproject.button.deleteapplication=Delete application

# graphql Application (graphqlApplication.jsp)
graphql.graphqlapplication.header.application=Application: {0}
graphql.graphqlapplication.button.updateapplication=Update application
graphql.graphqlapplication.button.update=Update
graphql.graphqlapplication.button.updateendpoint=Update endpoint
graphql.graphqlapplication.button.upload=Upload
graphql.graphqlapplication.button.delete=Delete application
graphql.graphqlapplication.label.name=Name
graphql.graphqlapplication.label.description=Description
graphql.graphqlapplication.label.type=Type
graphql.graphqlapplication.label.address=Address
graphql.graphqlapplication.header.operations=Operations
graphql.graphqlapplication.header.types=Types
graphql.graphqlapplication.column.selected=Selected
graphql.graphqlapplication.column.description=Description
graphql.graphqlapplication.column.name=Name
graphql.graphqlapplication.column.type=Type
graphql.graphqlapplication.column.type.query=Query
graphql.graphqlapplication.column.type.mutation=Mutation
graphql.graphqlapplication.column.type.subscription=Subscription
graphql.graphqlapplication.column.type.enum=Enum
graphql.graphqlapplication.column.type.object=Object
graphql.graphqlapplication.button.deletequery=Delete query
graphql.graphqlapplication.label.nooperations=No operations available. Click on the "Upload" button to load new operations to the project.

# Update application (updateGraphQLApplication.jsp)
graphql.updategraphqlapplication.header.updateapplication=Update application: {0}
graphql.updategraphqlapplication.label.name=Name
graphql.updategraphqlapplication.label.description=Description
graphql.updategraphqlapplication.button.updateapplication=Update application
graphql.updategraphqlapplication.button.cancel=Cancel


# GraphQL query (graphQLQuery.jsp)
graphql.graphqlquery.header.query=Query: {0}
graphql.graphqlquery.label.name=Name
graphql.graphqlquery.label.status=Status
graphql.graphqlquery.label.responsestrategy=Response strategy
graphql.graphqlquery.label.description=Description
graphql.graphqlquery.header.arguments=Arguments
graphql.graphqlquery.header.result=Result
graphql.graphqlquery.column.name=Name
graphql.graphqlquery.column.type=Type
graphql.graphqlquery.column.nullable=Nullable
graphql.graphqlquery.column.defaultvalue=Default value
graphql.graphqlquery.column.description=Description
graphql.graphqlquery.label.noarguments=No arguments


graphql.graphqlenum.header.enum=Enum: {0}
graphql.graphqlenum.label.name=Name
graphql.graphqlenum.label.description=Description
graphql.graphqlenum.header.definitions=Definitions
graphql.graphqlenum.column.name=Name
graphql.graphqlenum.label.nodefinitions=No definitions available

# GraphQL object (graphQLObject.jsp)
graphql.graphqlobject.header.object=Object: {0}
graphql.graphqlobject.label.name=Name
graphql.graphqlobject.label.description=Description
graphql.graphqlobject.header.attributes=Attributes
graphql.graphqlobject.column.name=Name
graphql.graphqlobject.column.type=Type
graphql.graphqlobject.column.nullable=Nullable
graphql.graphqlobject.column.value=Value
graphql.graphqlobject.button.updateobject=Update
graphql.graphqlobject.column.description=Description
graphql.graphqlobject.label.noattributes=No attributes

# Update GraphQL object (updateGraphQLObject.jsp)
graphql.updategraphqlobject.header.object=Object: {0}
graphql.updategraphqlobject.label.name=Name
graphql.updategraphqlobject.label.description=Description
graphql.updategraphqlobject.header.attributes=Attributes
graphql.updategraphqlobject.column.name=Name
graphql.updategraphqlobject.column.type=Type
graphql.updategraphqlobject.column.nullable=Nullable
graphql.updategraphqlobject.column.description=Description
graphql.updategraphqlobject.column.value=Value
graphql.updategraphqlobject.label.noattributes=No attributes
graphql.updategraphqlobject.button.updateapplication=Update
graphql.updategraphqlobject.button.cancel=Cancel

# Create GraphQL application (createGraphQLApplication.jsp)
graphql.createapplication.header.application=New application
graphql.createapplication.label.name=Name
graphql.createapplication.label.description=Description
graphql.createapplication.button.createapplication=Create application
graphql.createapplication.button.cancel=Cancel


# Delete application (deleteGraphQLApplication.jsp)
graphql.deleteapplication.header.deleteapplication=Delete {0}?
graphql.deleteapplication.label.confirmation=Are you sure that you want to delete {0}?
graphql.deleteapplication.button.deleteapplication=Delete application
graphql.deleteapplication.button.cancel=Cancel

# Delete application (deleteGraphQLApplication.jsp)
graphql.deleteapplications.header.deleteapplications=Delete applications?
graphql.deleteapplications.label.confirmation=Are you sure that you want to delete the following applications:
graphql.deleteapplications.button.deleteapplications=Delete applications
graphql.deleteapplications.button.cancel=Cancel
graphql.deleteapplications.label.noapplications=You need to at least select one application to remove

# Type - GraphQL attribute types
graphql.type.attributetype.OBJECT_TYPE=Object type
graphql.type.attributetype.STRING=String
graphql.type.attributetype.ID=Id
graphql.type.attributetype.INT=Int
graphql.type.attributetype.FLOAT=Float
graphql.type.attributetype.BOOLEAN=Boolean
graphql.type.attributetype.ENUM=Enum

# Type - GraphQL resources
graphql.type.application=Application
graphql.type.query=Query
graphql.type.mutation=Mutation
graphql.type.subscription=Subscription
graphql.type.object=Object
graphql.type.enum=Enum

# Type - GraphQL Response strategy
graphql.type.responsestrategy.RANDOM=Random
graphql.type.responsestrategy.SEQUENCE=Sequence

# Type - GraphQL Operation Status
graphql.type.graphqloperationstatus.MOCKED=Mocked
graphql.type.graphqloperationstatus.DISABLED=Disabled
graphql.type.graphqloperationstatus.FORWARDED=Forwarded

# GraphQL breadcrumb

graphql.breadcrumb.project=GraphQL Project
graphql.breadcrumb.application=GraphQL Application
graphql.breadcrumb.query=Query
graphql.breadcrumb.mutation=Mutation
graphql.breadcrumb.subscription=Subscription
graphql.breadcrumb.objecttype=Object type
graphql.breadcrumb.enumtype=Enum type

# Upload graphql definition file (graphqlImportDefinition.jsp)
graphql.graphqlimportdefinition.header.uploadfile=Upload {0}
graphql.graphqlimportdefinition.header.description=On this page you can link or upload {0} files. In the "Link {0}" section you can link to an {0} file accessible from the Internet. In the "Upload {0}" section you can upload one or more {0} files by clicking on the upload button.
graphql.graphqlimportdefinition.header.link=Link {0}
graphql.graphqlimportdefinition.label.link=Link to {0} file:
graphql.graphqlimportdefinition.header.upload=Upload {0}
graphql.graphqlimportdefinition.label.upload=Files to upload:
graphql.graphqlimportdefinition.label.uploaddescription=Drag files into the box or click on the button to choose files
graphql.graphqlimportdefinition.button.uploadfiles=Upload files
graphql.graphqlimportdefinition.button.cancel=Cancel
graphql.graphqlimportdefinition.button.link=Link {0}
graphql.graphqlimportdefinition.message.success.title=Upload successful!
graphql.graphqlimportdefinition.message.success.body=The file was successfully uploaded and one or more applications has been created.
graphql.graphqlimportdefinition.message.error.title=Upload error!
graphql.graphqlimportdefinition.message.error.body=Unable to upload or parse the file.