package com.castlemock.repository.core.dynamodb.event;

import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.castlemock.core.basis.model.Saveable;
import com.castlemock.repository.core.dynamodb.DynamoRepository;
import lombok.Getter;
import lombok.Setter;
import org.dozer.DozerBeanMapper;
import org.dozer.Mapping;

import java.util.Date;

/**
 * @author Tiago Santos
 * @since 1.51
 */
public abstract class AbstractEventDynamoRepository<T extends AbstractEventDynamoRepository.EventDocument, D> extends DynamoRepository<T, D, String> {

    public AbstractEventDynamoRepository(DozerBeanMapper mapper, AmazonDynamoDB amazonDynamoDB,
                                         DynamoDBMapperConfig dynamoDBMapperConfig) {
        super(mapper, amazonDynamoDB, dynamoDBMapperConfig);
    }

    public AbstractEventDynamoRepository(DozerBeanMapper mapper, AmazonDynamoDB amazonDynamoDB) {
        super(mapper, amazonDynamoDB);
    }

    @DynamoDBDocument
    @Getter
    @Setter
    public static abstract class EventDocument implements Saveable<String> {

        @DynamoDBHashKey(attributeName = "id")
        @DynamoDBAutoGeneratedKey
        @Mapping("id")
        private String id;
        @DynamoDBAttribute(attributeName = "resourceName")
        @Mapping("resourceName")
        private String resourceName;
        @DynamoDBAttribute(attributeName = "startDate")
        @Mapping("startDate")
        private Date startDate;
        @DynamoDBAttribute(attributeName = "endDate")
        @Mapping("endDate")
        private Date endDate;
    }

}
